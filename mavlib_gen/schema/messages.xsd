<?xml version="1.0" encoding="UTF-8"?>
<!--
    Definition of attributes and elements of 'message'
    and 'messages' element
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="">

    <xs:include schemaLocation="field.xsd" />
    <xs:include schemaLocation="types.xsd" />

    <xs:element name="message">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="development_status">
                    <xs:sequence>
                        <!--TODO: always having a description should be enforced, but common.xml doesnt have descriptions on everything yet-->
                        <xs:element name="description" minOccurs="0" maxOccurs="1" />
                        <xs:element ref="field" minOccurs="0" maxOccurs="unbounded" />
                        <!-- Mavlink v2 extensions are optional and require at least 1 field -->
                        <xs:sequence minOccurs="0" maxOccurs="1">
                            <xs:element name="extensions" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="field" minOccurs="1" maxOccurs="unbounded" />
                        </xs:sequence>
                    </xs:sequence>
                    <xs:attribute name="id" use="required" />
                    <xs:attribute ref="name" use="required" />
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <!-- enforce field names being unique within a message -->
        <xs:unique name="unique_field">
            <xs:selector xpath="field" />
            <xs:field xpath="@name" />
        </xs:unique>
    </xs:element>

    <xs:element name="messages">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="message" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
        <!-- this will enforce unique message ids on a per-dialect basis.
            The actual generator still has to verify unique-ids across
            dialects (when multiple are generated together) -->
        <xs:unique name="unique_msgid">
            <xs:selector xpath="message" />
            <xs:field xpath="@id" />
        </xs:unique>
        <xs:unique name="unique_msg_name">
            <xs:selector xpath="message" />
            <xs:field xpath="@name" />
        </xs:unique>
    </xs:element>

</xs:schema>
